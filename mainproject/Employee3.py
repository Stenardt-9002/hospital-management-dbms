#!/usr/bin/env python
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.9.3 on Wed Apr 10 21:37:21 2019
#

import wx
import da_techk
import Employeesql
from da_techk import date_ver

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class MyFrame(wx.Frame):
    fir_st = ""
    las_t = ""
    em_pid = 0
    da_te = 1
    mn_th = 1
    ye_ar = 2000
    b_id = 1
    de_id = 1
    gend = 'M'

    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((400, 300))
        self.text_ctrl_1 = wx.TextCtrl(self, wx.ID_ANY, "")
        self.text_ctrl_2 = wx.TextCtrl(self, wx.ID_ANY, "")
        self.text_ctrl_3 = wx.TextCtrl(self, wx.ID_ANY, "")
        self.text_ctrl_4 = wx.TextCtrl(self, wx.ID_ANY, "date")
        self.text_ctrl_5 = wx.TextCtrl(self, wx.ID_ANY, "month")
        self.text_ctrl_6 = wx.TextCtrl(self, wx.ID_ANY, "year")
        self.radio_btn_2 = wx.RadioButton(self, wx.ID_ANY, "")
        self.radio_btn_3 = wx.RadioButton(self, wx.ID_ANY, "")
        self.radio_btn_4 = wx.RadioButton(self, wx.ID_ANY, "")
        self.text_ctrl_7 = wx.TextCtrl(self, wx.ID_ANY, "only integer")
        self.text_ctrl_8 = wx.TextCtrl(self, wx.ID_ANY, "only intger")
        self.radio_box_1 = wx.RadioBox(self, wx.ID_ANY, "", choices=["NonDoctorate", "Doctorate"], majorDimension=1, style=wx.RA_SPECIFY_ROWS)
        self.button_1 = wx.Button(self, wx.ID_ANY, "Add Data")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_TEXT, self.First_namein, self.text_ctrl_1)
        self.Bind(wx.EVT_TEXT, self.Last_namein, self.text_ctrl_2)
        self.Bind(wx.EVT_TEXT, self.Emp_idin, self.text_ctrl_3)
        self.Bind(wx.EVT_TEXT, self.First_date, self.text_ctrl_4)
        self.Bind(wx.EVT_TEXT, self.Sec_month, self.text_ctrl_5)
        self.Bind(wx.EVT_TEXT, self.Yea_r, self.text_ctrl_6)
        self.Bind(wx.EVT_RADIOBUTTON, self.RadioButton1, self.radio_btn_2)
        self.Bind(wx.EVT_RADIOBUTTON, self.RadioButton2, self.radio_btn_3)
        self.Bind(wx.EVT_RADIOBUTTON, self.RadioButton3, self.radio_btn_4)
        self.Bind(wx.EVT_TEXT, self.bi_id, self.text_ctrl_7)
        self.Bind(wx.EVT_TEXT, self.Dept_idin, self.text_ctrl_8)
        self.Bind(wx.EVT_BUTTON, self.Button_pressed, self.button_1)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MyFrame.__set_properties
        self.SetTitle("Add Employee")
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyFrame.__do_layout
        sizer_4 = wx.BoxSizer(wx.VERTICAL)
        sizer_5 = wx.BoxSizer(wx.VERTICAL)
        sizer_14 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_12 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_13 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_11 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_1 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_9 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_8 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_7 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_6 = wx.BoxSizer(wx.HORIZONTAL)
        label_1 = wx.StaticText(self, wx.ID_ANY, "First_name")
        sizer_6.Add(label_1, 1, 0, 0)
        sizer_6.Add(self.text_ctrl_1, 1, 0, 0)
        sizer_5.Add(sizer_6, 1, wx.EXPAND, 0)
        label_2 = wx.StaticText(self, wx.ID_ANY, "Last_name")
        sizer_7.Add(label_2, 1, 0, 0)
        sizer_7.Add(self.text_ctrl_2, 1, 0, 0)
        sizer_5.Add(sizer_7, 1, wx.EXPAND, 0)
        label_3 = wx.StaticText(self, wx.ID_ANY, "Emp_id  ")
        sizer_8.Add(label_3, 1, 0, 0)
        sizer_8.Add(self.text_ctrl_3, 1, wx.ALL, 1)
        sizer_5.Add(sizer_8, 1, wx.EXPAND, 0)
        label_4 = wx.StaticText(self, wx.ID_ANY, "D.O.B.")
        sizer_9.Add(label_4, 0, 0, 0)
        sizer_9.Add(self.text_ctrl_4, 0, 0, 0)
        sizer_9.Add(self.text_ctrl_5, 0, 0, 0)
        sizer_9.Add(self.text_ctrl_6, 1, 0, 0)
        sizer_5.Add(sizer_9, 1, wx.EXPAND, 0)
        label_5 = wx.StaticText(self, wx.ID_ANY, "Gender")
        sizer_1.Add(label_5, 0, 0, 0)
        label_6 = wx.StaticText(self, wx.ID_ANY, "   M", style=wx.ALIGN_CENTER | wx.ST_ELLIPSIZE_MIDDLE)
        sizer_1.Add(label_6, 0, 0, 0)
        sizer_1.Add(self.radio_btn_2, 0, 0, 0)
        label_7 = wx.StaticText(self, wx.ID_ANY, "  F", style=wx.ALIGN_CENTER | wx.ST_ELLIPSIZE_MIDDLE)
        sizer_1.Add(label_7, 0, 0, 0)
        sizer_1.Add(self.radio_btn_3, 0, 0, 0)
        label_8 = wx.StaticText(self, wx.ID_ANY, "  O", style=wx.ALIGN_CENTER | wx.ST_ELLIPSIZE_MIDDLE)
        sizer_1.Add(label_8, 0, 0, 0)
        sizer_1.Add(self.radio_btn_4, 0, wx.ALIGN_CENTER, 0)
        sizer_5.Add(sizer_1, 1, wx.EXPAND, 0)
        label_9 = wx.StaticText(self, wx.ID_ANY, "  B_Id",)
        sizer_11.Add(label_9, 1, 0, 0)
        sizer_11.Add(self.text_ctrl_7, 1, wx.RIGHT, 0)
        sizer_5.Add(sizer_11, 1, wx.EXPAND, 0)
        label_10 = wx.StaticText(self, wx.ID_ANY, "   Dept_id")

        sizer_13.Add(label_10, 1, 0, 0)
        sizer_13.Add(self.text_ctrl_8, 1, 0, 0)
        sizer_5.Add(sizer_13, 1, wx.EXPAND, 0)

        label_11 = wx.StaticText(self, wx.ID_ANY, "Occupation")
        sizer_2.Add(label_11, 1, 0, 0)
        sizer_2.Add(self.radio_box_1, 1, wx.ALIGN_CENTER_VERTICAL, 1)


        # sizer_5.Add(sizer_12, 1, wx.EXPAND, 0)
        sizer_5.Add(sizer_2, 1, wx.EXPAND, 0)
        sizer_14.Add((0, 0), 0, 0, 0)
        sizer_14.Add((0, 0), 0, 0, 0)
        sizer_5.Add(sizer_14, 1, wx.EXPAND, 0)
        sizer_5.Add(self.button_1, 0, 0, 0)
        sizer_4.Add(sizer_5, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_4)
        self.Layout()
        # end wxGlade

    def First_namein(self, event):  # wxGlade: MyFrame.<event_handler>
        # print("Event handler 'First_namein' not implemented!")
        self.fir_st = event.GetString()
        event.Skip()

    def Last_namein(self, event):  # wxGlade: MyFrame.<event_handler>
        # print("Event handler 'Last_namein' not implemented!")

        self.las_t = event.GetString()
        event.Skip()

    def Emp_idin(self, event):  # wxGlade: MyFrame.<event_handler>
        # print("Event handler 'Emp_idin' not implemented!")
        self.em_pid = event.GetString()
        event.Skip()

    def First_date(self, event):  # wxGlade: MyFrame.<event_handler>
        # print("Event handler 'First_date' not implemented!")
        self.da_te = event.GetString()
        event.Skip()

    def Sec_month(self, event):  # wxGlade: MyFrame.<event_handler>
        # print("Event handler 'Sec_month' not implemented!")
        self.mn_th = event.GetString()
        event.Skip()

    def Yea_r(self, event):  # wxGlade: MyFrame.<event_handler>
        # print("Event handler 'Yea_r' not implemented!")
        self.ye_ar = event.GetString()
        event.Skip()

    def RadioButton1(self, event):  # wxGlade: MyFrame.<event_handler>
        # print("Event handler 'RadioButton1' not implemented!")
        self.gend = "M"

        event.Skip()

    def RadioButton2(self, event):  # wxGlade: MyFrame.<event_handler>
        # print("Event handler 'RadioButton2' not implemented!")
        self.gend = "F"
        event.Skip()
    def bi_id(self, event):  # wxGlade: MyFrame.<event_handler>
        # print("Event handler 'bi_id' not implemented!")
        self.b_id = event.GetString()
        event.Skip()

    def RadioButton3(self, event):  # wxGlade: MyFrame.<event_handler>
        # print("Event handler 'RadioButton3' not implemented!")
        self.gend = "O"
        event.Skip()

    def Dept_idin(self, event):  # wxGlade: MyFrame.<event_handler>
        # print("Event handler 'Dept_idin' not implemented!")
        self.de_id = event.GetString()
        event.Skip()

    def Button_pressed(self, event):  # wxGlade: MyFrame.<event_handler>
        # print("Event handler 'Button_pressed' not implemented!")
        # print(self.fir_st)

        # print(x.isalpha())
        # print(self.fir_st.isalpha)
        if (any(x.isalpha() for x in self.fir_st)and  all(x.isalpha() or x.isspace() for x in self.fir_st)):
            pass
        else:

            print("reacjed 1")
            self.err_or()

        if self.las_t.isalpha()==False:
            print("reached2")
            self.err_or()

        # print(self.las_t)
        try:
            self.em_pid = (int)(self.em_pid)

        except:
            print("dreached 3 ")
            self.err_or()
        try:

            self.de_id = (int)(self.de_id)

        except:
            print("dreached 4 ")
            self.err_or()
        try:

            self.b_id = (int)(self.b_id)

        except:
            print("dreached 5 ")
            self.err_or()

        try:

            self.da_te = (int)(self.da_te)

        except:
            print("dreached 6 ")
            self.err_or()

        try:

            self.ye_ar = (int)(self.ye_ar)

        except:
            print("dreached 7 ")
            self.err_or()
        try:

            self.mn_th = (int)(self.mn_th)
        except:
            print("dreached 8 ")
            self.err_or()


        x = date_ver(self.da_te,self.mn_th,self.ye_ar)
        if x == -1:
            self.wrng_date()
        # print(self.em_pid)
        # print(self.da_te)
        # print(self.mn_th)
        # print(self.ye_ar)
        print(self.gend)
        print(self.b_id)
        print(self.de_id)


        dob = str(self.ye_ar)+"-"+ str(self.mn_th)+"-"+str(self.da_te)

        # contacting sql
        x12,mlist = Employeesql.getdata(self.fir_st,self.las_t,self.em_pid,dob,self.gend,self.b_id,self.de_id)

        # x12 =1 employee -2 Branch -3 Department 0 workin

        lis_t = []
        # print(x)
        # print(li_st)
        for i in mlist:
            i = (str)(i)
            lis_t.append(i)
            lis_t.append(" , ")
        mlist = "".join(lis_t)

        if x12 == -1:
            yesNoBox = wx.MessageDialog(None,'THE ID YOU ARE ENTERING IS ALREADY PRESENT ' + mlist + '\nPRESS yes to try again and no to stop','Question', wx.YES_NO)

            yesNoAnswer = yesNoBox.ShowModal()
            yesNoBox.Destroy()
            if yesNoAnswer == wx.ID_YES:
                self.Destroy()
                app = MyApp(0)
                app.MainLoop()
                pass


            elif yesNoAnswer == wx.ID_NO:
                exit()
        elif x12 == -2:
            yesNoBox = wx.MessageDialog(None,'THE ID YOU ARE ENTERING IS NOT PRESENT IN BRANCH LIST ' + mlist + '\nPRESS yes to try again and no to stop','Question', wx.YES_NO)

            yesNoAnswer = yesNoBox.ShowModal()
            yesNoBox.Destroy()
            if yesNoAnswer == wx.ID_YES:
                self.Destroy()
                app = MyApp(0)
                app.MainLoop()
                pass


            elif yesNoAnswer == wx.ID_NO:
                exit()

        elif x12 == -3:
            yesNoBox = wx.MessageDialog(None,'THE ID YOU ARE ENTERING IS NOT PRESENT IN DEPARTMENT LIST '+ mlist + '\nPRESS yes to try again and no to stop','Question', wx.YES_NO)

            yesNoAnswer = yesNoBox.ShowModal()
            yesNoBox.Destroy()
            if yesNoAnswer == wx.ID_YES:
                self.Destroy()
                app = MyApp(0)
                app.MainLoop()
                pass


            elif yesNoAnswer == wx.ID_NO:
                exit()













        self.close()

        event.Skip()
    def err_or(self):
        try:
            yesNoBox1 = wx.MessageDialog(None, "Invalid input", 'Question', wx.OK)
            yesNoAnswer1 = yesNoBox1.ShowModal()
            yesNoBox1.Destroy()
            self.Destroy()

        except:
            self.Close()
        finally:
            app = MyApp(0)
            app.MainLoop()




    def wrng_date(self):
        try:
            yesNoBox2 = wx.MessageDialog(None, "Wrong date entered", 'Question', wx.OK)
            yesNoAnswer2 = yesNoBox2.ShowModal()
            yesNoBox2.Destroy()
            self.Destroy()
        except:
            self.Close()

        finally:
            app = MyApp(0)
            app.MainLoop()




    def close(self):
        self.Close()

# end of class MyFrame

class MyApp(wx.App):
    def OnInit(self):
        self.frame = MyFrame(None, wx.ID_ANY, "")
        self.SetTopWindow(self.frame)
        self.frame.Show()
        return True

# end of class MyApp

def intitla():
    app = MyApp(0)
    app.MainLoop()
# intitla()